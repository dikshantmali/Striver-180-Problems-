https://practice.geeksforgeeks.org/problems/inversion-of-array-1587115620/1





#include<bits/stdc++.h>
#define ll long long
using namespace std;


ll cnt = 0;
void merge(int a[], int low,int mid,int high)
{
  vector<int> temp;
  int i = low,j=mid+1;

  while(i<=mid && j<=high)
  {
    if (a[i] <= a[j])
    {
      temp.push_back(a[i]);
      i++;
    }
    else
    {
      cnt += mid-i+1;
      temp.push_back(a[j]);
      j++;
      
    }

  }

  
  while(j <= high)
  {
    temp.push_back(a[j]);
    j++;
  }
   while(i <= mid)
   {
     temp.push_back(a[i]);
    ++i;
 }


  for(int i = low; i <= high; ++i)
  {
    a[i] = temp[i-low];
  }

}
void mergesort(int a[], int low,int high)
{
  if (high > low)
  {
int mid = (low +  high) / 2;
mergesort(a,low,mid);
mergesort(a,mid+1,high);
merge(a,low,mid,high);

 }


}
int main() {
 
  #ifndef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
  #endif
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
  cout.tie(NULL);
  int n;
  cin>>n;
  int a[n]={0};
  for (int i = 0; i < n; ++i)
  {
    cin>>a[i];
  }
  int low = 0,high = n-1;
  mergesort(a,low,high);
  cout<<cnt<<endl;




  return 0;
  
}